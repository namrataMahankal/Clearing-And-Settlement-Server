package com.clearing;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
// import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

// import com.clearing.Settle;

@Controller // This means that this class is a Controller
@RequestMapping(path="/trades") // This means URL's start with /demo (after Application path)
public class TradeController {
  @Autowired // This means to get the bean called tradeRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private TradeRepository tradeRepository;

  // Generate Random Trades
  @GetMapping(path="/generate")
  public @ResponseBody void generateTrades() {
    // This returns a JSON or XML with the
    tradeRepository.deleteAll();

    int numTrades = 1000; // For now
    ArrayList<Trade> randomTrades = new ArrayList<Trade>();

    for(int i=0; i<numTrades; ++i){
        randomTrades.add(new Trade());
    }

    tradeRepository.saveAll(randomTrades);
  }


  // Add Random Trades
  @GetMapping(path="/addRandom") // Later add Parameter
  public @ResponseBody void addRandomTrade() {
    // This returns a JSON or XML with the
    int numTrades = 5; // For now
    ArrayList<Trade> randomTrades = new ArrayList<Trade>();

    for(int i=0; i<numTrades; ++i){
        randomTrades.add(new Trade());
    }
    tradeRepository.saveAll(randomTrades);
  }

  // Fetch all trades in json
  @GetMapping(path="/fetch")
  public @ResponseBody Iterable<Trade> getAllUsers() {
    return tradeRepository.findAll();
  } 

  // Settle Trades
  @GetMapping(path="/settle") // Check for specific argument to ask
  public @ResponseBody void settleTrades() {
    // Basic Settling Algorithms
    // Member[] members = memberRepository.findAll();
  }
}
